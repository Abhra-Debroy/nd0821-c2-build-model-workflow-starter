1.  run.py: error: the following arguments are required: --tmp_directory"

============

 while running, mlflow run . -P steps=basic_cleaning .

Run fails with " run.py: error: the following arguments are required: --tmp_directory"

we do not use temp_directory as argument, why it is asking to use this ?

see details run result below :

.......

2022/01/30 19:32:56 INFO mlflow.projects.utils: === Created directory /tmp/tmpvnmk5elw for downloading remote URIs passed to arguments of type 'path' ===

2022/01/30 19:32:56 INFO mlflow.projects.backend.local: === Running command 'source /home/abhra/miniconda3/bin/../etc/profile.d/conda.sh && conda activate mlflow-e6a79a3d9a6daa1afbba4a1df972459ec02c3528 1>&2 && python run.py --input_artifact sample.csv:latest \

--output_artifact clean_sample.csv \

--output_type clean_sample \

--output_description 'Data with outliers and null values removed' \

--min_price 10 \

--max_price 350' in run with ID '248a55b94fd6426b904675f4351a2412' ===

usage: run.py [-h] --tmp_directory TMP_DIRECTORY --input_artifact INPUT_ARTIFACT --output_artifact OUTPUT_ARTIFACT

--output_type OUTPUT_TYPE --output_description OUTPUT_DESCRIPTION --min_price MIN_PRICE --max_price

MAX_PRICE

run.py: error: the following arguments are required: --tmp_directory

Traceback (most recent call last):

File "/home/abhra/nd0821-c2-build-model-workflow-starter/main.py", line 52, in go

_ = mlflow.run(

File "/home/abhra/miniconda3/envs/mlflow-39beb38945f7e5378bc314f1ee9f6f4b4376524a/lib/python3.9/site-packages/mlflow/projects/__init__.py", line 307, in run

_wait_for(submitted_run_obj)


Solutions :
==========
added : "tmp_directory": tmp_dir in main.py as below 

        if "basic_cleaning" in active_steps:
            _ = mlflow.run(
                os.path.join(hydra.utils.get_original_cwd(), "src", "basic_cleaning"),
                "main",
                parameters={
                    "tmp_directory": tmp_dir,
                    "input_artifact": "sample.csv:latest",
                    "output_artifact": "clean_sample.csv",
                    "output_type": "clean_sample",
                    "output_description": "Data with outliers and null values removed",
                    "min_price": config['etl']['min_price'],
                    "max_price": config['etl']['max_price']
                },
            )